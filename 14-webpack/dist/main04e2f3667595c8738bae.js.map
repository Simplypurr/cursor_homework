{"version":3,"file":"main04e2f3667595c8738bae.js","mappings":"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","sources":["webpack://cursor-webpack/webpack/runtime/async module","webpack://cursor-webpack/./03-functions/main.js","webpack://cursor-webpack/./04-arrays/main.js","webpack://cursor-webpack/./05-array-iteration/main.js","webpack://cursor-webpack/./06-objects/main.js","webpack://cursor-webpack/./07-functional-programming/main.js","webpack://cursor-webpack/./08-Prototypes-and-classes/main.js","webpack://cursor-webpack/./09-DOM/main.js","webpack://cursor-webpack/./11-Promises-and-date/js/main.js","webpack://cursor-webpack/./14-webpack/src/index.js","webpack://cursor-webpack/webpack/bootstrap","webpack://cursor-webpack/webpack/runtime/define property getters","webpack://cursor-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://cursor-webpack/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && !queue.d) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = 1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && (queue.d = 0);\n};","// get the biggest number from any digit number\nexport function getMaxDigit(number) {\n    let digit = number.toString().split('');\n    let max = +digit[0]\n    for (let i = 0; i <= digit.length; i++){\n        if (+digit[i] > max) {\n            max = +digit[i]\n        } \n    }\n    return max;\n}\n\n// exponentiation number\n\n    // using loop\nfunction pow1(x, n) {\n    let result = 1;\n    for (let i = 0; i < n; i++) {\n        result *= x;\n    }\n    return result;\n}\n\n    // using recursion\nfunction pow2(x, n) {\n    if (n === 1) {\n        return x;\n    } else {\n        return x * pow2(x, n - 1);\n    }\n}\n\n\n\n// Capitalize letter in string\nfunction capitalizeLetter(string) {\n    return string.slice(0,1).toUpperCase() + string.slice(1).toLowerCase();\n}\n\n// Salary without tax\nfunction salaryWithoutTax(salary) {\n    let tax = 18 + 1.5;\n    return salary - (salary * (tax / 100));\n}\n\n\n// random number\nfunction getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// count letters in word\nfunction countLetters(letter, word) {\n    let arr = word.toLowerCase().split('');\n    let counter = 0;\n    for (let i = 0; i <= arr.length; i++) {\n        if (arr[i] === letter) {\n            counter++\n        }\n    }\n    return counter;\n}\n\n// currency converter\nfunction convertCurrency(amount) {\n    let rate = 35;\n    if (amount.toLowerCase().includes('uah')) {\n        return (parseInt(amount, 10) / rate).toFixed(2) + '$';\n    } else if (amount.includes('$')) {\n        return (parseInt(amount, 10) * rate).toFixed(2) + 'UAH';\n    } else {\n        return 'Your currency is not valid, try again'\n    }\n}\n\n// random pass\nfunction randomPassword(length = 8) {\n    let pass = '';\n    const min = 0;\n    const max = 9;\n    for (let i = 0; i < length; i++) {\n        pass += getRandomNumber(min,max);\n    }\n    return pass\n}\n\n// delete matching letters\nfunction deleteLetters(letter, word) {\n    const arrStr = word.toLowerCase().split('');\n    const normalizedLetter = letter.toLowerCase();\n    let updString = '';\n    for (let i = 0; i < arrStr.length; i++) {\n        updString += (arrStr[i] === normalizedLetter) ? '' : arrStr[i]; \n    }\n    return updString;\n}\n\n// palindrome sentence\nfunction isPalindrome(string) {\n    const strWithoutSpace = string.toLowerCase().replace((/\\s/g), '');\n    const reversedStr = strWithoutSpace.split('').reverse().join('');\n    return (reversedStr === strWithoutSpace);\n}\n\n// delete duplicate letter\nfunction deleteDuplicateLetters(string) {\n    let arrStr = string.toLowerCase().split('');\n    let updString = '';\n    for (let i = 0; i < arrStr.length; i++){\n        if (arrStr.indexOf(arrStr[i]) === arrStr.lastIndexOf(arrStr[i]))\n        updString += arrStr[i];\n    }\n    return updString;\n}\n\n// document.writeln(`<ul><li>Function 1 - ${getMaxDigit(21638)}</li>\n//                 <li>Function 2 - ${pow1(5, 3)}</li>\n//                 <li>Function 2.1 - ${pow2(5, 5)}</li>\n//                 <li>Function 3 - ${capitalizeLetter('valEra')}</li>\n//                 <li>Function 4 - ${salaryWithoutTax(10000)}</li>\n//                 <li>Function 5 - ${getRandomNumber(10, 50)}</li>\n//                 <li>Function 6 - ${countLetters('a', 'Abrakadabra')}</li>\n//                 <li>Function 7 - ${convertCurrency('1000$')}</li>\n//                 <li>Function 8 - ${randomPassword()}</li>\n//                 <li>Function 9 - ${deleteLetters('a', 'Abrakadabra')}</li>\n//                 <li>Function 10 - ${isPalindrome('race car')}</li>\n//                 <li>Function 11 - ${deleteDuplicateLetters('see you later alligator')}</li></ul>`);\n\n\n","// create three arrays\nconst students = [\"Олександр\", \"Ігор\", \"Олена\", \"Марія\", \"Олексій\", \"Світлана\"];\nconst themes = [\"Диференційне рівняння\", \"Теорія автоматів\", \"Алгоритми і структури даних\"];\nconst marks = [4, 5, 5, 3, 4, 5];\n\nexport {students as studentsArr};\n\n// create a function which makes a pairs nested array\nexport function getPairs(arr) {\n    const maleStudents = [];\n    const femaleStudents = [];\n    for (const item of arr) {\n        item.endsWith('а')|| item.endsWith('я') ? femaleStudents.push(item) : maleStudents.push(item); \n    }\n    const studentsInPairs = maleStudents.map((item, index) => [`${item} i ${femaleStudents[index]}`]);\n    return studentsInPairs;\n}\n\n// create a function which determines a topic for students in pairs\nfunction topicPicker(arr, studentPairs) {\n    const topicsAndPairs = studentPairs.flat().map((item, index) => [item, arr[index]]);\n    return topicsAndPairs;\n}\n\n// create a function which applies a grade for each student in array\nfunction getGrade(students, marks) {\n    const studentsGrade = [];\n    for (let i = 0; i < students.length; i++) {\n        studentsGrade.push(new Array(students[i], marks[i]))\n    }\n    return studentsGrade;\n}\n\n// create a function which applies a random grade for each pair of students\nfunction getRandomGrade(arr) {\n    const randomGrade = arr.map((item) => [item]);\n    const minGrade = 2;\n    const maxGrade = 5;\n    for (let i = 0; i < arr.length; i++) {\n        randomGrade[i].push(getRandomNumber(minGrade,maxGrade))\n    }\n    return randomGrade;\n}\n\n// random function\nfunction getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// export const studentPairs = getPairs(students);\n// const topicsAndPairs = topicPicker(themes, studentPairs);\n// const studentsGrade = getGrade(students, marks);\n// const randomPairsGrade = getRandomGrade(topicsAndPairs);\n\n// document.writeln(`<ul><li>${studentPairs}</li>\n//                     <li>${topicsAndPairs}</li>\n//                     <li>${studentsGrade}</li>\n//                     <li>${randomPairsGrade}</li></ul>`);","// create func get Random Array\nfunction getRandomArray(length, min, max) {\n    const arr = [...Array(length)];\n    return arr.map(() => getRandomNumber(min, max));\n}\n// console.log(getRandomArray(10, 0, 100));\n\n// create func get Mode of numbers (ignores decimal)\nexport function getMode(...numbers) {\n    const mode = filterIntegers(numbers).reduce((count, current) => {\n        if (!count[current]) {\n            count[current] = 1;\n        } else {\n            count[current] += 1;\n        }\n        return count; \n    }, {});\n\n    const result = Object.keys(mode).reduce((prev, curr) => {\n        if (mode[prev] > mode[curr]) {\n            return prev;\n        } else if (mode[prev] < mode[curr]) {\n            return curr;\n        } else {\n            return 'Your entered numbers do not have a mode';\n        }\n    })\n    return result;\n}\n\n// console.log(getMode(1, 2.2, 2, 2, 2, 3.3, 3, 3, 4, 5));\n\n// create func get average number (ignore decimal)\nfunction getAverage(...numbers) {\n    const total = filterIntegers(numbers).reduce((total,current) => (total + current));\n    return +(total / numbers.length).toFixed(2);\n    \n}\n// console.log(getAverage(3,2,3,4,5,6));\n\n// create func get median number (ignore decimal)\nfunction getMedian(...numbers) {\n    const middleOfArr = Math.floor(numbers.length / 2);\n    const median = filterIntegers(numbers).sort((a,b) => a - b).reduce((prev, curr, ind, arr) => {\n        if (arr.length % 2) {\n            return arr[middleOfArr];\n        } else {\n            return (arr[middleOfArr - 1] + arr[middleOfArr]) / 2;\n        }\n    });\n    return median;   \n}\n// console.log(getMedian(1,3,5,2,4));\n\n// create func filter even numbers\nfunction filterEvenNumbers(...numbers) {\n    return numbers.filter(i => (i % 2));\n}\n// console.log(filterEvenNumbers(1,2,3,4,40,55));\n\n// create func count positive numbers\nfunction countPositiveNumbers(...numbers) {\n    return numbers.filter(i => (i > 0)).length;\n}\n// console.log(countPositiveNumbers(1,2,-3,4,-40,-55));\n\n// create func filter dividing by five\nfunction getDivideByFive(...numbers) {\n    return numbers.filter(i => !(i % 5));\n}\n// console.log(getDivideByFive(1,2,19,123,20,40,55));\n\n// create func replace bad words with asterisks\nfunction replaceBadWords(string) {\n    const badWords = ['shit', 'fuck'];\n    const regEx = new RegExp(badWords.join('|'), 'ig');\n    const updString = string.split(' ').map((item) => item.replace(regEx, '****')).join(' ');\n    return updString;\n}\n// console.log(replaceBadWords('bullshit ,shit, fuck, fucking'));\n\n// create func which dividing word by three letters\nfunction divideWordByThree(word) {\n    return word.toLowerCase().match(/.{1,3}/g);\n}\n// console.log(divideWordByThree('performance'));\n\n// get string permutation\nfunction getCombinationWord(str) {\n    if (str.length > 10) return 'Function is limited to operate with string which length not exceed 10 symbols';\n    if (str.length === 0) return '';\n    if (str.length === 1) return str;\n    \n    const result = [];\n\n    for (let i = 0; i < str.length; i++) {\n        const currentChar = str[i];\n        const remainedChar = str.slice(0,i) + str.slice(i + 1);\n\n        const remainedCharsPermuted = getCombinationWord(remainedChar);\n\n        for (let j = 0; j < remainedCharsPermuted.length; j++) {\n            const combination = currentChar + remainedCharsPermuted[j];\n            result.push(combination);\n        }\n    }\n    return result;\n}\n// console.log(getCombinationWord('manama'));\n\n// addition function\n    // random number\nfunction getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n    // filter integer\nexport function filterIntegers(intArr) {\n    return intArr.filter(Number.isInteger);\n}\n\n\n","export const students = [{\n  name: \"Tanya\",\n  course: 3,\n  subjects: {\n    math: [4, 4, 3, 4],\n    algorithms: [3, 3, 3, 4, 4, 4],\n    data_science: [5, 5, 3, 4]\n  }\n}, {\n  name: \"Victor\",\n  course: 4,\n  subjects: {\n    physics: [5, 5, 5, 3],\n    economics: [2, 3, 3, 3, 3, 5],\n    geometry: [5, 5, 2, 3, 5]\n  }\n}, {\n  name: \"Anton\",\n  course: 2,\n  subjects: {\n    statistics: [4, 5, 5, 5, 5, 3, 4, 3, 4, 5],\n    english: [5, 3],\n    cosmology: [5, 5, 5, 5]\n  }\n}];\n\n// get subjects of student object\nexport const getSubjects = (obj) => {\n  const upperCasedSubjects = Object.keys(obj.subjects).map(item => {\n    const normalizedSubject = item.slice(1).replace('_', ' ');\n    return item.slice(0, 1).toUpperCase() + normalizedSubject; \n  });\n  return upperCasedSubjects;\n}\n//(getSubjects(students[0]));\n\n// get average mark of student object\nconst getAverageMark = (obj) => {\n  const marks = Object.values(obj.subjects).flat();\n  const total = marks.reduce((total, current) => total + current);\n  return +(total / marks.length).toFixed(2);\n}\n\n//(getAverageMark(students[0]));\n\n// get student info with average mark\nconst getStudentInfo = (obj) => {\n  const {course, name} = obj;\n  return {course, name, averageMark: getAverageMark(obj)};\n}\n//(getStudentInfo(students[1]));\n\n// get student name from array of student objects\nconst getStudentNames = (arrOfObj) => arrOfObj.map(obj => obj.name).sort();\n//(getStudentNames(students));\n\n// get student whose academic performance is the best\nconst getBestStudent = (arrOfObj) => {\n  const modifiedArrOfObj = arrOfObj.map(obj => getStudentInfo(obj));\n  const bestStudent = modifiedArrOfObj.reduce((prev, curr) => {\n    if (prev.averageMark > curr.averageMark) {\n      return prev.name;\n    } else {\n      return curr.name;\n    }\n  });\n  return bestStudent\n}\n//(getBestStudent(students));\n\n// letter counter \nconst letterCounter = (str) => {\n  const strArr = str.toLowerCase().split('');\n  const result = strArr.reduce((count, current) => {\n    if (!count[current]) {\n      count[current] = 1;\n    } else {\n      count[current] += 1;\n    }\n    return count;\n  }, {});\n  return result;\n}\n\n//(letterCounter('test'))\n","const ukraine = { \n    tax: 0.195, \n    middleSalary: 1789, \n    vacancies: 11476 \n};\nconst latvia = { \n    tax: 0.25, \n    middleSalary: 1586, \n    vacancies: 3921 \n};\nconst lithuania = { \n    tax: 0.15, \n    middleSalary: 1509, \n    vacancies: 1114 \n};\nexport {ukraine, lithuania, latvia};\n// get taxes\nexport function getMyTaxes(salary) {\n    return +(this.tax * salary).toFixed(2);\n}\n//(getMyTaxes.call(ukraine, 3000));\n\n// get middle taxes\nfunction getMiddleTaxes() {\n    return +(this.tax * this.middleSalary).toFixed(2);\n}\n//(getMiddleTaxes.call(latvia))\n\n// get total taxes\nfunction getTotalTaxes() {\n    return +(this.tax * this.middleSalary * this.vacancies)\n}\n//(getTotalTaxes.call(lithuania));\n\n// get profit from random salary in range from 1500 to 2000  \nfunction getMySalary(country) {\n    let timer = 0;\n    let timerId = setInterval(() => {\n        const obj = {\n            salary: getRandomNumber(1500,2000),\n            taxes() {\n                return getMyTaxes.call(country, this.salary)\n            },\n            profit() {\n                return this.salary - this.taxes();\n            }\n        }\n        //({salary: obj.salary, taxes: obj.taxes(), profit: obj.profit()});\n       \n        if(timer === 10) {\n            clearInterval(timerId);\n        }\n        timer++\n    },10000);\n}\n\ngetMySalary(lithuania);\n\n\n\nfunction getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","// create student class\n\nexport class Student {\n    constructor(university, course, fullName, mark) {\n        this.university = university;\n        this.course = course;\n        this.fullName = fullName;\n        this.mark = mark;\n        this.isStudent = true;\n    }\n\n    getStudentInfo() {\n        return `Student of ${this.course}th course,from ${this.university} - ${this.fullName}`;\n    }\n\n    get marks() {\n        return this.isStudent ? this.mark : null;\n    }\n\n    set marks(value) {\n        if (this.isStudent) this.mark.push(value);\n    }\n\n    getAverageMark() {\n        const totalMarks = this.mark.reduce((total, prev) => total += prev,0)\n        return +(totalMarks / this.mark.length).toFixed(2);\n    }\n\n    dismissed() {\n       this.student = false; \n    }\n\n    recovered() {\n       this.student = true;\n    }\n}\n\n\n\nconst elon = new Student('University of Pennsylvania', 5, 'Elon Musk', [5, 5, 5, 4]);\n\n// console.log(elon.getStudentInfo());\n// console.log(elon.marks);\n// elon.dismissed();\n// console.log(elon.marks);\n// elon.marks = 5;\n// console.log(elon.marks);\n// elon.recovered();\n// console.log(elon.marks);\n// elon.marks = 5;\n// console.log(elon.marks);\n// console.log(elon.getAverageMark());\n\nclass BudgetStudent extends Student {\n    constructor (university, course, fullName, mark) {\n        super(university, course, fullName, mark);\n        let timer = 0;\n        const timerId = setInterval(() => {\n            this.getScholarShip();\n\n            if (timer >= 10) {\n                clearInterval(timerId);\n            }\n            timer++;\n        }, 30000);\n    }\n\n    getScholarShip() {\n        const gradeForScholarship = 4;\n        if (this.getAverageMark() >= gradeForScholarship && this.isStudent) {\n            return console.log('You get a scholarship 1400 uah');\n        } \n    }\n}\n\n// const musk = new BudgetStudent('University of Pennsylvania', 5, 'Elon Musk', [5, 5, 5, 4]);\n\n\n\n\n","// version 1\nexport function generateBlock(quantity = 25, inClassElement = '.wrapper', className = 'inner-block') {\n    const inside = document.querySelector(inClassElement);\n    const blocks = [...Array(quantity)].map(() => document.createElement('div'));\n    setInterval(() => {\n        blocks.forEach((item) => {\n            item.classList.add(className);\n            item.style.backgroundColor = generateHexColor();\n        });\n        inside.append(...blocks);\n    },1000);\n}\n\n\n// version 2\nfunction generateBlocks(quantity = 25) {\n    const getTemplate = (color) => `<div class=\"inner-block\" style=\"background-color: ${color}\"></div>`;\n    const inside = document.querySelector('.wrapper');\n    const blocks = [...Array(quantity)].map(() => document.createElement('div'));\n    setInterval(() => {\n        const htmlString = blocks.reduce((acc, _) => acc + getTemplate(generateHexColor()),'')\n        inside.innerHTML = htmlString;\n    },1000);\n}\n\nexport function generateHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\n\n\n// generateBlocks();\n// generateBlock(25, '.wrapper-2', 'another-inner-block');\n","export async function getRandomChinese(length) {\n    const promise = () => new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(getSymbol());\n        }, 50);\n    })\n\n    const getSymbol = () => {\n        const charCode = Number(Date.now().toString().slice(-5));\n        const symbol = String.fromCharCode(charCode);\n        return symbol;\n    }\n\n    let result = '';\n    let i = 0;\n    while (length > i) {\n        result += await promise()\n        i++\n    }\n\n    return result;\n}\n\n\n// DOM manipulation\nconst input = document.getElementById('length');\nconst button = document.getElementById('submit');\nconst modal = document.querySelector('.modal')\nconst div1 = document.createElement('div')\nconst div2 = document.createElement('div')\n\n// async function modalCreate(value) {\n//     if (!input.value) return;\n\n//     const startTime = performance.now();\n//     div1.textContent = await getRandomChinese(Number(value));\n//     const endTime = performance.now();\n//     div2.textContent = `Execution time: ${(endTime - startTime).toFixed(2)}ms`;\n//     modal.classList.add('active');\n//     modal.append(div1, div2);\n// }\n\n// button.addEventListener('click', async () => modalCreate(input.value));\n    \n\n\n","import { getMaxDigit } from \"../../03-functions/main\";\nimport \"./scss/main.scss\"\nimport { studentsArr, getPairs } from \"../../04-arrays/main\";\nimport { getMode } from \"../../05-array-iteration/main\";\nimport { getSubjects, students } from \"../../06-objects/main\";\nimport { getMyTaxes, ukraine, lithuania, latvia } from \"../../07-functional-programming/main\";\nimport { Student } from \"../../08-Prototypes-and-classes/main\";\nimport { generateBlock } from \"../../09-DOM/main\";\nimport { getRandomChinese } from \"../../11-Promises-and-date/js/main\";\nimport bg from \"./assets/bg-image.jpg\";\n\n\nconsole.log(getRandomChinese(4))\nconst student = new Student('University of Pennsylvania', 5, 'Elon Musk', [5, 5, 5, 4]);\n\n\nconst funcContainer = document.getElementById('func');\n\nfuncContainer.innerHTML = `<div>${student.getStudentInfo()}</div>\n                        <div>Max digit from 12345252 - ${getMaxDigit('12345252')}</div>\n                        <div>Mode from 1,2,3,4,2,21,2 - ${getMode(1,2,3,4,2,21,2)}</div>\n                        <div>Get pairs from Students: ${studentsArr} => ${getPairs(studentsArr)} </div>\n                        <div>Get subjects: ${getSubjects(students[0])}</div>\n                        <div>Get salary taxes from 3000$ for Ukraine: ${getMyTaxes.call(ukraine, 3000)}$</div>\n                        <div>Get random chinese symbols: ${await getRandomChinese(4)}</div>`\ngenerateBlock(5)","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(804);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","getMaxDigit","number","digit","toString","split","max","i","length","students","getPairs","arr","maleStudents","femaleStudents","item","endsWith","push","studentsInPairs","map","index","getMode","numbers","mode","filterIntegers","reduce","count","current","result","Object","keys","prev","curr","intArr","filter","Number","isInteger","name","course","subjects","math","algorithms","data_science","physics","economics","geometry","statistics","english","cosmology","getSubjects","obj","normalizedSubject","slice","replace","toUpperCase","timer","timerId","ukraine","tax","middleSalary","vacancies","getMyTaxes","salary","this","toFixed","setInterval","Math","floor","random","clearInterval","Student","university","fullName","mark","isStudent","value","total","student","generateBlock","quantity","inClassElement","className","inside","document","querySelector","blocks","Array","createElement","forEach","classList","add","style","backgroundColor","generateHexColor","append","getRandomChinese","promise","Promise","resolve","setTimeout","getSymbol","charCode","Date","now","String","fromCharCode","getElementById","console","log","innerHTML","getStudentInfo","studentsArr","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","Symbol","queue","d","fn","r","a","body","hasAwait","currentDeps","outerResolve","reject","depQueues","Set","rej","x","deps","dep","then","e","ret","wrapDeps","getResult","fnQueue","q","has","err","definition","key","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}